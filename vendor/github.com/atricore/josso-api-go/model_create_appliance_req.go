/*
 * Atricore Console :: Remote : API
 *
 * # Atricore Console API
 *
 * API version: 1.4.3-SNAPSHOT
 * Contact: sgonzalez@atricore.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoapi

import (
	"encoding/json"
)

// CreateApplianceReq struct for CreateApplianceReq
type CreateApplianceReq struct {
	Appliance *IdentityApplianceDefinitionDTO `json:"appliance,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateApplianceReq CreateApplianceReq

// NewCreateApplianceReq instantiates a new CreateApplianceReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplianceReq() *CreateApplianceReq {
	this := CreateApplianceReq{}
	return &this
}

// NewCreateApplianceReqWithDefaults instantiates a new CreateApplianceReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplianceReqWithDefaults() *CreateApplianceReq {
	this := CreateApplianceReq{}
	return &this
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *CreateApplianceReq) GetAppliance() IdentityApplianceDefinitionDTO {
	if o == nil || o.Appliance == nil {
		var ret IdentityApplianceDefinitionDTO
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplianceReq) GetApplianceOk() (*IdentityApplianceDefinitionDTO, bool) {
	if o == nil || o.Appliance == nil {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *CreateApplianceReq) HasAppliance() bool {
	if o != nil && o.Appliance != nil {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given IdentityApplianceDefinitionDTO and assigns it to the Appliance field.
func (o *CreateApplianceReq) SetAppliance(v IdentityApplianceDefinitionDTO) {
	o.Appliance = &v
}

func (o CreateApplianceReq) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Appliance != nil {
		toSerialize["appliance"] = o.Appliance
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreateApplianceReq) UnmarshalJSON(bytes []byte) (err error) {
	varCreateApplianceReq := _CreateApplianceReq{}

	if err = json.Unmarshal(bytes, &varCreateApplianceReq); err == nil {
		*o = CreateApplianceReq(varCreateApplianceReq)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appliance")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateApplianceReq struct {
	value *CreateApplianceReq
	isSet bool
}

func (v NullableCreateApplianceReq) Get() *CreateApplianceReq {
	return v.value
}

func (v *NullableCreateApplianceReq) Set(val *CreateApplianceReq) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplianceReq) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplianceReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplianceReq(val *CreateApplianceReq) *NullableCreateApplianceReq {
	return &NullableCreateApplianceReq{value: val, isSet: true}
}

func (v NullableCreateApplianceReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplianceReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


