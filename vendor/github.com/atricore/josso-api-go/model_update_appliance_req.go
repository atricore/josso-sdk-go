/*
 * Atricore Console :: Remote : API
 *
 * # Atricore Console API
 *
 * API version: 1.4.3-SNAPSHOT
 * Contact: sgonzalez@atricore.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoapi

import (
	"encoding/json"
)

// UpdateApplianceReq struct for UpdateApplianceReq
type UpdateApplianceReq struct {
	Appliance *IdentityApplianceDefinitionDTO `json:"appliance,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateApplianceReq UpdateApplianceReq

// NewUpdateApplianceReq instantiates a new UpdateApplianceReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateApplianceReq() *UpdateApplianceReq {
	this := UpdateApplianceReq{}
	return &this
}

// NewUpdateApplianceReqWithDefaults instantiates a new UpdateApplianceReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateApplianceReqWithDefaults() *UpdateApplianceReq {
	this := UpdateApplianceReq{}
	return &this
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *UpdateApplianceReq) GetAppliance() IdentityApplianceDefinitionDTO {
	if o == nil || o.Appliance == nil {
		var ret IdentityApplianceDefinitionDTO
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplianceReq) GetApplianceOk() (*IdentityApplianceDefinitionDTO, bool) {
	if o == nil || o.Appliance == nil {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *UpdateApplianceReq) HasAppliance() bool {
	if o != nil && o.Appliance != nil {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given IdentityApplianceDefinitionDTO and assigns it to the Appliance field.
func (o *UpdateApplianceReq) SetAppliance(v IdentityApplianceDefinitionDTO) {
	o.Appliance = &v
}

func (o UpdateApplianceReq) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Appliance != nil {
		toSerialize["appliance"] = o.Appliance
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *UpdateApplianceReq) UnmarshalJSON(bytes []byte) (err error) {
	varUpdateApplianceReq := _UpdateApplianceReq{}

	if err = json.Unmarshal(bytes, &varUpdateApplianceReq); err == nil {
		*o = UpdateApplianceReq(varUpdateApplianceReq)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appliance")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateApplianceReq struct {
	value *UpdateApplianceReq
	isSet bool
}

func (v NullableUpdateApplianceReq) Get() *UpdateApplianceReq {
	return v.value
}

func (v *NullableUpdateApplianceReq) Set(val *UpdateApplianceReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateApplianceReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateApplianceReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateApplianceReq(val *UpdateApplianceReq) *NullableUpdateApplianceReq {
	return &NullableUpdateApplianceReq{value: val, isSet: true}
}

func (v NullableUpdateApplianceReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateApplianceReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


